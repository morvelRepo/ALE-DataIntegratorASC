// Decompiled with JetBrains decompiler
// Type: DataIntegratorASC.DomainModel.DBCorridor
// Assembly: DataIntegratorASC, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null
// MVID: CACEFAEB-425A-4474-9813-A6D977B283DD
// Assembly location: C:\Users\morat\OneDrive\Escritorio\DataIntegratorASC.exe

using DataIntegratorASC.Clases;
using NucleoBase.Core;
using System;
using System.Data;
using System.Data.SqlClient;

namespace DataIntegratorASC.DomainModel
{
  public class DBCorridor : DBBase
  {
    public DataTable DBGetObtieneTipoCambio
    {
      get
      {
        try
        {
          return this.oBD_SP.EjecutarDT_DeQuery("SELECT * From openquery(CORRIDOR, 'SELECT TO_CHAR(LASTUPDATED, ''YYYY-MM-DD'') AS AUDITDATE, EXCHANGERATE AS TIPOCAMBIO FROM TLCCORR.CURRENCYEXCHANGERATE') ", new object[0]);
        }
        catch (Exception ex)
        {
          throw ex;
        }
      }
    }

    public DataTable DBGetObtieneNIT
    {
      get
      {
        string str = "Select * From openquery(CORRIDOR, 'SELECT Distinct CP. CP.TAXIDNUMBER as NIT, CAST(CP.FULLNAME AS VARCHAR(80)) AS RAZON_SOCIAL, CAST(CP.ACCOUNTCODE AS VARCHAR(80)) AS ALIAS, ''ND'' AS NOTAS, ''ND'' AS TIPO, NULL AS DIGITO_VERIFICADOR, ''N'' AS USA_REPORTE_D151 FROM TLCCORR.COMPANYPROFILE CP WHERE CP.INACTIVE = 0 AND ((REGEXP_LIKE(CP.TAXIDNUMBER, ''[A - Z, Ñ, &]{ 3,4}[0-9]{ 8,9}'') and CP.REGION = ''Extranjero'') OR (REGEXP_LIKE (CP.TAXIDNUMBER, ''[A-Z, Ñ,&]{3,4}[0-9]{2}[0-1] [0-9] [0-3] [0-9] [A-Z,0-9]?[A - Z, 0 - 9]?[0 - 9, A - Z]?'') AND CP.REGION<> ''Extranjero'')) Order by NIT ') ";
        DataTable dbGetObtieneNit = this.oBD_SP.EjecutarDT_DeQuery(str, new object[0]);
        DataTable table = this.oBD_SP.EjecutarDT_DeQuery(str.Replace("TLCCORR", "MTYCORR"), new object[0]);
        dbGetObtieneNit.Merge(table);
        return dbGetObtieneNit;
      }
    }

    public DataTable DBGetObtieneDireccionClientesProveedores
    {
      get
      {
        DataSet obtieneDatosDeQuery = new DBCorridor().DBGetObtieneDatosDeQuery("Select * INTO #Temp From openquery(CORRIDOR, ' SELECT CAST(AD.COMPANYKEY AS INT) AS DETALLE_DIRECCION, ''ESTANDAR'' AS DIRECCION, AD.ADDRESS AS CAMPO_1, NVL(UDNI.DATA, '''')         AS CAMPO_2, NVL(UDNE.DATA, '''')\t\t\tAS CAMPO_3, NVL(AD.UPCITY, ''S / PR'') AS CAMPO_4, NVL(AD.UPCITY, ''S / PR'') AS CAMPO_5, NVL(AD.COMMENTS, ''S / CO'') AS CAMPO_6, NVL(AD.PROVINCE, ''S / CI'') AS CAMPO_7, NVL(ST.NAME, ''S / NA'') AS CAMPO_8, NVL(CO.PROPERNAME, ''S / PA'') AS CAMPO_9, NVL(AD.POSTALCODE, ''S / CP'') AS CAMPO_10, NVL(UDDE.DATA, '''') AS CAMPO_11 FROM TLCCORR.ADDRESSES AD LEFT OUTER JOIN TLCCORR.STATES ST on(AD.STATEKEY = ST.STATEKEY) LEFT OUTER JOIN TLCCORR.COUNTRIES CO on(AD.COUNTRYKEY = CO.COUNTRYKEY) LEFT OUTER JOIN TLCCORR.COMPANYPROFILE CP on(AD.COMPANYKEY = CP.COMPANYKEY) LEFT OUTER JOIN TLCCORR.COMPANYPROFILEUDFDATA UDNI on(AD.COMPANYKEY = UDNI.COMPANYKEY and UDNI.USERDEFINEDFIELDKEY = 44) LEFT OUTER JOIN TLCCORR.COMPANYPROFILEUDFDATA UDNE on(AD.COMPANYKEY = UDNE.COMPANYKEY and UDNE.USERDEFINEDFIELDKEY = 43) LEFT OUTER JOIN TLCCORR.COMPANYPROFILEUDFDATA UDDE on(AD.COMPANYKEY = UDDE.COMPANYKEY and UDDE.USERDEFINEDFIELDKEY = 46) WHERE AD.ADDRESSKEY = CP.DEFAULTADDRESSKEY AND CP.INACTIVE = 0 ORDER BY AD.COMPANYKEY') SELECT * FROM #Temp Select * From openquery(CORRIDOR, ' SELECT CAST(AD.COMPANYKEY AS INT) AS DETALLE_DIRECCION, ''ESTANDAR'' AS DIRECCION, AD.ADDRESS AS CAMPO_1, NVL(UDNI.DATA, '''')         AS CAMPO_2, NVL(UDNE.DATA, '''')\t\t\tAS CAMPO_3, NVL(AD.UPCITY, ''S / PR'') AS CAMPO_4, NVL(AD.UPCITY, ''S / PR'') AS CAMPO_5, NVL(AD.COMMENTS, ''S / CO'') AS CAMPO_6, NVL(AD.PROVINCE, ''S / CI'') AS CAMPO_7, NVL(ST.NAME, ''S / NA'') AS CAMPO_8, NVL(CO.PROPERNAME, ''S / PA'') AS CAMPO_9, NVL(AD.POSTALCODE, ''S / CP'') AS CAMPO_10, NVL(UDDE.DATA, '''') AS CAMPO_11 FROM MTYCORR.ADDRESSES AD LEFT OUTER JOIN MTYCORR.STATES ST on(AD.STATEKEY = ST.STATEKEY) LEFT OUTER JOIN MTYCORR.COUNTRIES CO on(AD.COUNTRYKEY = CO.COUNTRYKEY) LEFT OUTER JOIN MTYCORR.COMPANYPROFILE CP on(AD.COMPANYKEY = CP.COMPANYKEY) LEFT OUTER JOIN MTYCORR.COMPANYPROFILEUDFDATA UDNI on(AD.COMPANYKEY = UDNI.COMPANYKEY and UDNI.USERDEFINEDFIELDKEY = 44) LEFT OUTER JOIN MTYCORR.COMPANYPROFILEUDFDATA UDNE on(AD.COMPANYKEY = UDNE.COMPANYKEY and UDNE.USERDEFINEDFIELDKEY = 43) LEFT OUTER JOIN MTYCORR.COMPANYPROFILEUDFDATA UDDE on(AD.COMPANYKEY = UDDE.COMPANYKEY and UDDE.USERDEFINEDFIELDKEY = 46) WHERE AD.ADDRESSKEY = CP.DEFAULTADDRESSKEY AND CP.INACTIVE = 0 ORDER BY AD.COMPANYKEY') where DETALLE_DIRECCION NOT IN (select distinct DETALLE_DIRECCION  FROM #Temp) DROP TABLE #temp ");
        DataTable clientesProveedores = obtieneDatosDeQuery.Tables[0].Copy();
        DataTable table = obtieneDatosDeQuery.Tables[1].Copy();
        clientesProveedores.Merge(table);
        return clientesProveedores;
      }
    }

    public DataTable DBGetObtieneProveedores
    {
      get
      {
        try
        {
          DataTable obtieneProveedores = this.oBD_SP.EjecutarDT_DeQuery("Select * From openquery(CORRIDOR, ' SELECT CP.TAXIDNUMBER as NIT, CAST(CP.COMPANYKEY AS VARCHAR(20)) AS PROVEEDOR, CAST(CP.COMPANYKEY AS INT) AS DETALLE_DIRECCION, CAST(UPPER(CP.FULLNAME) AS VARCHAR(80)) AS NOMBRE, CAST(CP.ACCOUNTCODE AS VARCHAR(80)) AS ALIAS, CAST(UPPER(NVL(CO.CONTACT, ''ND'')) AS VARCHAR(30)) AS CONTACTO, ''ND'' AS CARGO, CAST(UPPER(AD.ADDRESS) AS VARCHAR(500)) AS DIRECCION, CAST(CO.EMAIL AS VARCHAR(249)) AS E_MAIL, TO_DATE(CP.DATELASTUPDATED,''MM/DD/YYYY.HH24:MI:SS'') AS FECHA_INGRESO, TO_CHAR(CURRENT_DATE, ''YYYY/MM/DD'') AS FECHA_ULT_MOV, CAST(NVL(PH.PHONENUMBER, ''ND'') AS VARCHAR(50)) AS TELEFONO1, CAST(NVL(PH.PHONENUMBER, ''ND'') AS VARCHAR(50)) AS TELEFONO2, CAST(NVL(PH.PHONENUMBER, ''ND'') AS VARCHAR(50)) AS FAX, 0 AS ORDEN_MINIMA, 0 AS DESCUENTO, 0 AS TASA_INTERES_MORA, CASE CP.REGION WHEN ''Extranjero'' THEN ''E'' WHEN ''Nacional'' THEN ''L'' ELSE ''X'' end as LOCAL, ''N'' AS CONGELADO, NVL(CP.TAXIDNUMBER, ''XEXX010101000'') AS CONTRIBUYENTE, ''30'' AS CONDICION_PAGO, CASE CP.REGION WHEN ''Extranjero'' THEN ''USD'' WHEN ''Nacional'' THEN ''MXN'' ELSE ''000'' end as MONEDA, CASE CP.REGION WHEN ''Extranjero'' THEN ''USA'' WHEN ''Nacional'' THEN ''MEX'' ELSE ''XXX'' end as PAIS, CASE CP.REGION WHEN ''Extranjero'' THEN ''P - EXT'' WHEN ''Nacional'' THEN ''P - NAC'' ELSE ''C - XXX'' end as CATEGORIA_PROVEED, ''S'' AS MULTIMONEDA, 0 AS SALDO, 0 AS SALDO_LOCAL, 0 AS SALDO_DOLAR, CAST(CP.NOTES AS VARCHAR(500)) AS NOTAS, CASE WHEN INACTIVE = 0 THEN ''S'' ELSE ''N'' END AS ACTIVO, ''F'' AS TIPO_CONTRIBUYENTE, CASE CP.REGION WHEN ''Extranjero'' THEN ''00'' WHEN ''Nacional'' THEN ''16'' ELSE ''ND'' END AS CODIGO_IMPUESTO, ''N'' AS AUTORETENEDOR, NULL AS REGIMEN_TRIB, 0 AS SALDO_TRANS, 0 AS SALDO_TRANS_LOCAL, 0 AS SALDO_TRANS_DOLAR, ''N'' AS PERMITE_DOC_GP, ''S'' AS PARTICIPA_FLUJOCAJA, NULL AS CURP, ''SA'' AS USUARIO_CREACION, TO_CHAR(CURRENT_DATE, ''YYYY/MM/DD'') AS FECHA_HORA_CREACION, ''SA'' AS USUARIO_ULT_MOD, TO_CHAR(CURRENT_DATE, ''YYYY/MM/DD'') AS FCH_HORA_ULT_MOD, ''N'' AS IMPUESTO1_INCLUIDO, CASE CP.REGION WHEN ''Extranjero'' THEN ''EXTRANJERO'' WHEN ''Nacional'' THEN ''MEXICANO'' ELSE ''ND'' END AS U_NACIONALIDAD, ''TLC'' AS BASE FROM TLCCORR.COMPANYPROFILE CP LEFT OUTER JOIN TLCCORR.CONTACTS CO ON(CO.COMPANYKEY = CP.COMPANYKEY AND CO.PRIMARYCONTACT = 1) LEFT OUTER JOIN TLCCORR.PHONENUMBERS PH ON(PH.COMPANYKEY = CP.COMPANYKEY AND PH.PHONENUMBERKEY = CP.DEFAULTPHONEKEY) LEFT OUTER JOIN TLCCORR.ADDRESSES AD ON(AD.COMPANYKEY = CP.COMPANYKEY AND AD.ADDRESSKEY = CP.DEFAULTADDRESSKEY) LEFT OUTER JOIN TLCCORR.PHONENUMBERS PH2 ON (PH2.COMPANYKEY = CP.COMPANYKEY) AND PH2.TITLE = ''Fax'' WHERE CP.VENDOR = 1 AND CP.INACTIVE = 0 AND CP.REGION in(''Extranjero'',''Nacional'') AND TO_DATE(CP.DATELASTUPDATED,''MM/DD/YYYY.HH24:MI:SS'') >= ''" + MyGlobals.sFechaInicioOpe + "'' ') ", new object[0]);
          DataTable table = this.oBD_SP.EjecutarDT_DeQuery("Select * From openquery(CORRIDOR, ' SELECT CASE WHEN CP.TAXIDNUMBER IS NULL AND CP.REGION = ''Extranjero'' THEN ''XEXX010101000'' WHEN CP.TAXIDNUMBER IS NULL AND CP.REGION = ''Nacional'' THEN ''XAXX010101000'' WHEN CP.TAXIDNUMBER IS NOT NULL THEN CP.TAXIDNUMBER END as NIT, CAST(CP.COMPANYKEY AS VARCHAR(20)) AS PROVEEDOR, CAST(CP.COMPANYKEY AS INT) AS DETALLE_DIRECCION, CAST(UPPER(CP.FULLNAME) AS VARCHAR(80)) AS NOMBRE, CAST(CP.ACCOUNTCODE AS VARCHAR(80)) AS ALIAS, CAST(UPPER(NVL(CO.CONTACT, ''ND'')) AS VARCHAR(30)) AS CONTACTO, ''ND'' AS CARGO, CAST(UPPER(AD.ADDRESS) AS VARCHAR(500)) AS DIRECCION, CAST(CO.EMAIL AS VARCHAR(249)) AS E_MAIL, TO_DATE(CP.DATELASTUPDATED,''MM/DD/YYYY.HH24:MI:SS'') AS FECHA_INGRESO, TO_CHAR(CURRENT_DATE, ''YYYY/MM/DD'') AS FECHA_ULT_MOV, CAST(NVL(PH.PHONENUMBER, ''ND'') AS VARCHAR(50)) AS TELEFONO1, CAST(NVL(PH.PHONENUMBER, ''ND'') AS VARCHAR(50)) AS TELEFONO2, CAST(NVL(PH.PHONENUMBER, ''ND'') AS VARCHAR(50)) AS FAX, 0 AS ORDEN_MINIMA, 0 AS DESCUENTO, 0 AS TASA_INTERES_MORA, CASE CP.REGION WHEN ''Extranjero'' THEN ''E'' WHEN ''Nacional'' THEN ''L'' ELSE ''X'' end as LOCAL, ''N'' AS CONGELADO, NVL(CP.TAXIDNUMBER, ''XEXX010101000'') AS CONTRIBUYENTE, ''30'' AS CONDICION_PAGO, CASE CP.REGION WHEN ''Extranjero'' THEN ''USD'' WHEN ''Nacional'' THEN ''MXN'' ELSE ''000'' end as MONEDA, CASE CP.REGION WHEN ''Extranjero'' THEN ''USA'' WHEN ''Nacional'' THEN ''MEX'' ELSE ''XXX'' end as PAIS, CASE CP.REGION WHEN ''Extranjero'' THEN ''P - EXT'' WHEN ''Nacional'' THEN ''P - NAC'' ELSE ''C - XXX'' end as CATEGORIA_PROVEED, ''S'' AS MULTIMONEDA, 0 AS SALDO, 0 AS SALDO_LOCAL, 0 AS SALDO_DOLAR, CAST(CP.NOTES AS VARCHAR(500)) AS NOTAS, CASE WHEN INACTIVE = 0 THEN ''S'' ELSE ''N'' END AS ACTIVO, ''F'' AS TIPO_CONTRIBUYENTE, CASE CP.REGION WHEN ''Extranjero'' THEN ''00'' WHEN ''Nacional'' THEN ''16'' ELSE ''ND'' END AS CODIGO_IMPUESTO, ''N'' AS AUTORETENEDOR, NULL AS REGIMEN_TRIB, 0 AS SALDO_TRANS, 0 AS SALDO_TRANS_LOCAL, 0 AS SALDO_TRANS_DOLAR, ''N'' AS PERMITE_DOC_GP, ''S'' AS PARTICIPA_FLUJOCAJA, NULL AS CURP, ''SA'' AS USUARIO_CREACION, TO_CHAR(CURRENT_DATE, ''YYYY/MM/DD'') AS FECHA_HORA_CREACION, ''SA'' AS USUARIO_ULT_MOD, TO_CHAR(CURRENT_DATE, ''YYYY/MM/DD'') AS FCH_HORA_ULT_MOD, ''N'' AS IMPUESTO1_INCLUIDO, CASE CP.REGION WHEN ''Extranjero'' THEN ''EXTRANJERO'' WHEN ''Nacional'' THEN ''MEXICANO'' ELSE ''ND'' END AS U_NACIONALIDAD, ''MTY'' AS BASE FROM MTYCORR.COMPANYPROFILE CP LEFT OUTER JOIN MTYCORR.CONTACTS CO ON(CO.COMPANYKEY = CP.COMPANYKEY AND CO.PRIMARYCONTACT = 1) LEFT OUTER JOIN MTYCORR.PHONENUMBERS PH ON(PH.COMPANYKEY = CP.COMPANYKEY AND PH.PHONENUMBERKEY = CP.DEFAULTPHONEKEY) LEFT OUTER JOIN MTYCORR.ADDRESSES AD ON(AD.COMPANYKEY = CP.COMPANYKEY AND AD.ADDRESSKEY = CP.DEFAULTADDRESSKEY) LEFT OUTER JOIN MTYCORR.PHONENUMBERS PH2 ON (PH2.COMPANYKEY = CP.COMPANYKEY) AND PH2.TITLE = ''Fax'' WHERE CP.VENDOR = 1 AND CP.INACTIVE = 0 AND CP.DEFAULTADDRESSKEY IS NOT NULL AND CP.REGION in(''Extranjero'',''Nacional'') AND TO_DATE(CP.DATELASTUPDATED,''MM/DD/YYYY.HH24:MI:SS'') >= ''" + MyGlobals.sFechaInicioOpe + "'' ') ", new object[0]);
          obtieneProveedores.Merge(table);
          return obtieneProveedores;
        }
        catch (Exception ex)
        {
          throw ex;
        }
      }
    }

    public DataTable DBGetObtieneClientes
    {
      get
      {
        try
        {
          DataTable getObtieneClientes = this.oBD_SP.EjecutarDT_DeQuery("SELECT * from OpenQuery(CORRIDOR, ' SELECT CP.TAXIDNUMBER as NIT, CAST(CP.COMPANYKEY AS VARCHAR(19)) AS CLIENTE, CAST(CP.FULLNAME AS VARCHAR(100)) AS NOMBRE, CAST(AD.COMPANYKEY AS INT) AS DETALLE_DIRECCION, CAST(UPPER(CP.ACCOUNTCODE) AS VARCHAR(79)) AS ALIAS, CAST(NVL(UPPER(CO.CONTACT), ''ND'') AS VARCHAR(29)) AS CONTACTO, ''ND'' AS CARGO, CAST(AD.ADDRESS AS VARCHAR(480)) AS DIRECCION, CAST(CP.COMPANYKEY AS VARCHAR(7))  AS DIR_EMB_DEFAULT, CAST(NVL(PH.PHONENUMBER, ''ND'') AS VARCHAR(50)) AS TELEFONO1, CAST(NVL(PH.PHONENUMBER, ''ND'') AS VARCHAR(50)) AS TELEFONO2, PH2.PHONENUMBER                     AS FAX, CAST(NVL(PH.PHONENUMBER, ''ND'') AS VARCHAR(50)) AS FAX2, CAST(NVL(CP.TAXIDNUMBER, ''ND'') AS VARCHAR(20)) AS CONTRIBUYENTE, TO_DATE(CP.DATELASTUPDATED,''MM/DD/YYYY.HH24:MI:SS'') AS FECHA_INGRESO, ''S'' AS MULTIMONEDA, ''USD'' AS MONEDA, 0 AS LIMITE_CREDITO, ''N'' AS EXCEDER_LIMITE, 0 AS TASA_INTERES, 0 AS TASA_INTERES_MORA, ''1980/01/01'' AS FECHA_ULT_MORA, ''1980/01/01'' AS FECHA_ULT_MOV, ''00'' AS CONDICION_PAGO, ''ND - DOLAR'' AS NIVEL_PRECIO, 0 AS DESCUENTO, ''D'' AS MONEDA_NIVEL, ''S'' AS ACEPTA_BACKORDER, CASE CP.REGION WHEN ''Extranjero'' THEN ''USA'' WHEN ''Nacional'' THEN ''MEX'' ELSE ''XXX'' END as PAIS, ''ND'' AS ZONA, ''ND'' AS RUTA, ''ND'' AS VENDEDOR, ''ND'' AS COBRADOR, ''N'' AS ACEPTA_FRACCIONES, CASE WHEN INACTIVE = 0 THEN  ''S'' ELSE ''N'' END AS ACTIVO, ''N'' AS EXENTO_IMPUESTOS, 0 AS EXENCION_IMP1, 0 AS EXENCION_IMP2, ''N'' AS COBRO_JUDICIAL, CASE CP.REGION WHEN ''Extranjero'' THEN ''C - EXT'' WHEN ''Nacional'' THEN ''C - NAC'' ELSE ''C - XXX'' END as CATEGORIA_CLIENTE, CP.NOTES AS NOTAS,  0 AS DIAS_PROMED_ATRASO, ''N'' AS ASOCOBLIGCONTFACT, ''N'' AS USAR_PRECIOS_CORP, ''N'' AS USAR_EXENCIMP_CORP, NULL AS DIAS_DE_COBRO, ''P'' AS AJUSTE_FECHA_COBRO, ''0000000000000'' AS GLN, NULL AS UBICACION, ''N'' AS CLASE_DOCUMENTO, CASE CP.REGION WHEN ''Extranjero'' THEN ''E'' WHEN ''Nacional'' THEN ''L'' ELSE ''X'' END as LOCAL, ''F'' AS TIPO_CONTRIBUYENTE, NULL AS MODELO_RETENCION, ''S'' AS ACEPTA_DOC_ELECTRONICO, ''S'' AS CONFIRMA_DOC_ELECTRONICO, ''cpm@aleservicecenter.com'' AS EMAIL_DOC_ELECTRONICO, ''16'' AS CODIGO_IMPUESTO, NULL AS CURP, ''SA'' AS USUARIO_CREACION, TO_CHAR(CURRENT_DATE, ''YYYY/MM/DD'') AS FECHA_HORA_CREACION, ''SA'' AS USUARIO_ULT_MOD, TO_CHAR(CURRENT_DATE, ''YYYY/MM/DD'') AS FCH_HORA_ULT_MOD, ''facturacion@aleservicecenter.com'' AS EMAIL_DOC_ELECTRONICO_COPIA,  NULL AS NOMBRE_ADDENDA, ''TLC'' AS BASE FROM TLCCORR.COMPANYPROFILE CP LEFT OUTER JOIN TLCCORR.CONTACTS CO ON (CO.COMPANYKEY = CP.COMPANYKEY AND CO.PRIMARYCONTACT = 1) LEFT OUTER JOIN TLCCORR.PHONENUMBERS PH ON (PH.COMPANYKEY = CP.COMPANYKEY AND PH.PHONENUMBERKEY = CP.DEFAULTPHONEKEY) LEFT OUTER JOIN TLCCORR.ADDRESSES AD ON (AD.COMPANYKEY = CP.COMPANYKEY AND AD.ADDRESSKEY = CP.DEFAULTADDRESSKEY) LEFT OUTER JOIN TLCCORR.PHONENUMBERS PH2 ON (PH2.COMPANYKEY = CP.COMPANYKEY) AND PH2.TITLE = ''Fax'' WHERE CP.INACTIVE = 0 AND TO_DATE(CP.DATELASTUPDATED,''MM/DD/YYYY.HH24:MI:SS'') >= ''" + MyGlobals.sFechaInicioOpe + "'' AND CP.REGION in(''Extranjero'',''Nacional'') AND CP.CUSTOMER = 1 AND CP.DEFAULTADDRESSKEY is not NULL OR CAST(CP.COMPANYKEY AS VARCHAR(19)) = ''NCE00048'' ') ", new object[0]);
          DataTable table = this.oBD_SP.EjecutarDT_DeQuery("SELECT * from OpenQuery(CORRIDOR, ' SELECT CP.TAXIDNUMBER as NIT, CAST(CP.COMPANYKEY AS VARCHAR(19)) AS CLIENTE, CAST(CP.FULLNAME AS VARCHAR(100)) AS NOMBRE, CAST(AD.COMPANYKEY AS INT) AS DETALLE_DIRECCION, CAST(UPPER(CP.ACCOUNTCODE) AS VARCHAR(79)) AS ALIAS, CAST(NVL(UPPER(CO.CONTACT), ''ND'') AS VARCHAR(29)) AS CONTACTO, ''ND'' AS CARGO, CAST(AD.ADDRESS AS VARCHAR(480)) AS DIRECCION, CAST(CP.COMPANYKEY AS VARCHAR(7))  AS DIR_EMB_DEFAULT, CAST(NVL(PH.PHONENUMBER, ''ND'') AS VARCHAR(50)) AS TELEFONO1, CAST(NVL(PH.PHONENUMBER, ''ND'') AS VARCHAR(50)) AS TELEFONO2, PH2.PHONENUMBER                     AS FAX, CAST(NVL(PH.PHONENUMBER, ''ND'') AS VARCHAR(50)) AS FAX2, CAST(NVL(CP.TAXIDNUMBER, ''ND'') AS VARCHAR(20)) AS CONTRIBUYENTE, TO_DATE(CP.DATELASTUPDATED,''MM/DD/YYYY.HH24:MI:SS'') AS FECHA_INGRESO, ''S'' AS MULTIMONEDA, ''USD'' AS MONEDA, 0 AS LIMITE_CREDITO, ''N'' AS EXCEDER_LIMITE, 0 AS TASA_INTERES, 0 AS TASA_INTERES_MORA, ''1980/01/01'' AS FECHA_ULT_MORA, ''1980/01/01'' AS FECHA_ULT_MOV, ''00'' AS CONDICION_PAGO, ''ND - DOLAR'' AS NIVEL_PRECIO, 0 AS DESCUENTO, ''D'' AS MONEDA_NIVEL, ''S'' AS ACEPTA_BACKORDER, CASE CP.REGION WHEN ''Extranjero'' THEN ''USA'' WHEN ''Nacional'' THEN ''MEX'' ELSE ''XXX'' end as PAIS, ''ND'' AS ZONA, ''ND'' AS RUTA, ''ND'' AS VENDEDOR, ''ND'' AS COBRADOR, ''N'' AS ACEPTA_FRACCIONES, CASE WHEN INACTIVE = 0 THEN  ''S'' ELSE ''N'' END AS ACTIVO, ''N'' AS EXENTO_IMPUESTOS, 0 AS EXENCION_IMP1, 0 AS EXENCION_IMP2, ''N'' AS COBRO_JUDICIAL, CASE CP.REGION WHEN ''Extranjero'' THEN ''C - EXT'' WHEN ''Nacional'' THEN ''C - NAC'' ELSE ''C - XXX'' END as CATEGORIA_CLIENTE, CP.NOTES AS NOTAS,  0 AS DIAS_PROMED_ATRASO, ''N'' AS ASOCOBLIGCONTFACT, ''N'' AS USAR_PRECIOS_CORP, ''N'' AS USAR_EXENCIMP_CORP, NULL AS DIAS_DE_COBRO, ''P'' AS AJUSTE_FECHA_COBRO, ''0000000000000'' AS GLN, NULL AS UBICACION, ''N'' AS CLASE_DOCUMENTO, CASE CP.REGION WHEN ''Extranjero'' THEN ''E'' WHEN ''Nacional'' THEN ''L'' ELSE ''X'' END as LOCAL, ''F'' AS TIPO_CONTRIBUYENTE, NULL AS MODELO_RETENCION, ''S'' AS ACEPTA_DOC_ELECTRONICO, ''S'' AS CONFIRMA_DOC_ELECTRONICO, ''cpm@aleservicecenter.com'' AS EMAIL_DOC_ELECTRONICO, ''16'' AS CODIGO_IMPUESTO, NULL AS CURP, ''SA'' AS USUARIO_CREACION, TO_CHAR(CURRENT_DATE, ''YYYY/MM/DD'') AS FECHA_HORA_CREACION, ''SA'' AS USUARIO_ULT_MOD, TO_CHAR(CURRENT_DATE, ''YYYY/MM/DD'') AS FCH_HORA_ULT_MOD, ''facturacion@aleservicecenter.com'' AS EMAIL_DOC_ELECTRONICO_COPIA,  NULL AS NOMBRE_ADDENDA, ''MTY'' AS BASE FROM MTYCORR.COMPANYPROFILE CP LEFT OUTER JOIN MTYCORR.CONTACTS CO ON (CO.COMPANYKEY = CP.COMPANYKEY AND CO.PRIMARYCONTACT = 1) LEFT OUTER JOIN MTYCORR.PHONENUMBERS PH ON (PH.COMPANYKEY = CP.COMPANYKEY AND PH.PHONENUMBERKEY = CP.DEFAULTPHONEKEY) LEFT OUTER JOIN MTYCORR.ADDRESSES AD ON (AD.COMPANYKEY = CP.COMPANYKEY AND AD.ADDRESSKEY = CP.DEFAULTADDRESSKEY) LEFT OUTER JOIN MTYCORR.PHONENUMBERS PH2 ON (PH2.COMPANYKEY = CP.COMPANYKEY) AND PH2.TITLE = ''Fax'' WHERE CP.INACTIVE = 0 AND CP.REGION in(''Extranjero'',''Nacional'') AND CP.CUSTOMER = 1 AND CP.DEFAULTADDRESSKEY IS NOT NULL AND TO_DATE(CP.DATELASTUPDATED,''MM/DD/YYYY.HH24:MI:SS'') >= ''" + MyGlobals.sFechaInicioOpe + "'' ') ", new object[0]);
          getObtieneClientes.Merge(table);
          return getObtieneClientes;
        }
        catch (Exception ex)
        {
          throw ex;
        }
      }
    }

    public DataTable DBGetObtieneOrdenesTrabajo
    {
      get
      {
        try
        {
          DataTable obtieneOrdenesTrabajo = this.oBD_SP.EjecutarDT_DeQuery("Select * From openquery(CORRIDOR, 'SELECT ''T-WO-'' || WOCB.FORMATTEDINVOICENUMBER AS PEDIDO, ''N'' AS ESTADO, TO_CHAR(WOCB.INVOICEDATE, ''YYYY/MM/DD'') AS FECHA_PEDIDO, TO_CHAR(WOCB.INVOICEDATE, ''YYYY/MM/DD'') AS FECHA_PROMETIDA, TO_CHAR(WOCB.INVOICEDATE, ''YYYY/MM/DD'') AS FECHA_PROX_EMBARQU, NULL AS FECHA_ULT_EMBARQUE, NULL AS FECHA_ULT_CANCELAC, WOB.FORMATTEDWORKORDERNUMBER AS ORDEN_COMPRA, TO_CHAR(WOCB.INVOICEDATE, ''YYYY/MM/DD'') AS FECHA_ORDEN, NULL AS TARJETA_CREDITO, CAST(AD.ADDRESS AS VARCHAR(80)) AS EMBARCAR_A, WOCB.CUSTOMERKEY AS DIREC_EMBARQUE, AD.ADDRESS AS DIRECCION_FACTURA, AC.TAILNUMBER AS RUBRO1, AC.SERIALNUMBER AS RUBRO2, AC.AIRCRAFTMODEL AS RUBRO3, AC.AIRCRAFTMANUFACTURER AS RUBRO4, NULL AS RUBRO5, WOCB.CODCOMMENTS AS OBSERVACIONES, WOB.FORMATTEDWORKORDERNUMBER AS COMENTARIO_CXC, CT.SUBTOTALWORKORDERREVENUE + (CT.TOTALDISCOUNT * -1) AS TOTAL_MERCADERIA, 0 AS MONTO_ANTICIPO, 0 AS MONTO_FLETE, 0 AS MONTO_SEGURO, 0 AS MONTO_DOCUMENTACIO, ''P'' AS TIPO_DESCUENTO1, ''P'' AS TIPO_DESCUENTO2, CT.TOTALDISCOUNT * 0 AS MONTO_DESCUENTO1, 0 AS MONTO_DESCUENTO2, 0 AS PORC_DESCUENTO1, 0 AS PORC_DESCUENTO2, CT.TOTALTAXES AS TOTAL_IMPUESTO1, 0 AS TOTAL_IMPUESTO2, CT.TOTALWORKORDERREVENUE AS TOTAL_A_FACTURAR, 0 AS PORC_COMI_VENDEDOR, 0 AS PORC_COMI_COBRADOR, 0 AS TOTAL_CANCELADO, 0 AS TOTAL_UNIDADES, ''N'' AS IMPRESO, TO_CHAR(WOCB.INVOICEDATE, ''YYYY/MM/DD'') AS FECHA_HORA, 0 AS DESCUENTO_VOLUMEN, ''N'' AS TIPO_PEDIDO, ''D'' AS MONEDA_PEDIDO, 1 AS VERSION_NP, ''N'' AS AUTORIZADO, ''F'' AS DOC_A_GENERAR, ''N'' AS CLASE_PEDIDO, ''D'' AS MONEDA, ''ND - DOLAR'' AS NIVEL_PRECIO, ''ND'' AS COBRADOR, ''ND'' AS RUTA, ''SA'' AS USUARIO, ''30'' AS CONDICION_PAGO, ''TLC'' AS BODEGA, ''ND'' AS ZONA, ''ND'' AS VENDEDOR, WOCB.CUSTOMERKEY AS CLIENTE, CP.TAXIDNUMBER as NIT, WOCB.CUSTOMERKEY AS CLIENTE_DIRECCION, WOCB.CUSTOMERKEY AS CLIENTE_CORPORAC, WOCB.CUSTOMERKEY AS CLIENTE_ORIGEN, CASE WHEN CP.REGION = ''Nacional'' THEN ''MEX'' ELSE ''USA'' END AS PAIS, 0 AS SUBTIPO_DOC_CXC, ''FAC'' AS TIPO_DOC_CXC, ''S'' AS BACKORDER, NULL AS CONTRATO, 0 AS PORC_INTCTE, ''N'' AS DESCUENTO_CASCADA, NULL AS TIPO_CAMBIO, ''N'' AS FIJAR_TIPO_CAMBIO, ''F'' AS ORIGEN_PEDIDO, WOCB.SHIPPINGADDRESS AS DESC_DIREC_EMBARQUE, NULL AS DIVISION_GEOGRAFICA1, NULL AS DIVISION_GEOGRAFICA2, WOCB.TAXPERCENTAGE AS BASE_IMPUESTO1, WOCB.TAXPERCENTAGE AS BASE_IMPUESTO2, WOCB.CUSTOMERNAME AS NOMBRE_CLIENTE, TO_CHAR(WOCB.INVOICEDATE, ''YYYY/MM/DD'') AS FECHA_PROYECTADA, NULL AS FECHA_APROBACION, ''P'' AS TIPO_DOCUMENTO, NULL AS VERSION_COTIZACION, NULL AS RAZON_CANCELA_COTI, NULL AS DES_CANCELA_COTI, NULL AS CAMBIOS_COTI, NULL AS COTIZACION_PADRE, WOCB.TAXEXEMPT, ''TLC'' BASE FROM TLCCORR.WORKORDERCUSTOMERSBASE WOCB LEFT OUTER JOIN TLCCORR.COMPANYPROFILE CP ON (CP.COMPANYKEY = WOCB.CUSTOMERKEY) LEFT OUTER JOIN TLCCORR.ADDRESSES AD ON (AD.COMPANYKEY = WOCB.CUSTOMERKEY and AD.ADDRESSKEY = CP.DEFAULTADDRESSKEY) LEFT OUTER JOIN TLCCORR.WORKORDERCUSTOMERTOTALS CT ON (CT.WORKORDERCUSTOMERKEY = WOCB.WORKORDERCUSTOMERKEY) LEFT OUTER JOIN TLCCORR.WORKORDERSBASE WOB ON (WOB.WORKORDERKEY = CT.WORKORDERKEY) LEFT OUTER JOIN TLCCORR.AIRCRAFT AC ON (AC.AIRCRAFTKEY = WOB.AIRCRAFTKEY) WHERE CT.SUBTOTALWORKORDERREVENUE <> 0 AND WOCB.INVOICEDATE > ''" + MyGlobals.sFechaInicioOpe + "'' AND WOCB.INVOICEDATE >= TO_DATE(''02/05/2016'', ''DD/MM/YYYY'') ORDER BY WOCB.FORMATTEDINVOICENUMBER') ", new object[0]);
          DataTable table = this.oBD_SP.EjecutarDT_DeQuery("Select * From openquery(CORRIDOR, 'SELECT ''M-WO-'' || WOCB.FORMATTEDINVOICENUMBER AS PEDIDO, ''N'' AS ESTADO, TO_CHAR(WOCB.INVOICEDATE, ''YYYY/MM/DD'') AS FECHA_PEDIDO, TO_CHAR(WOCB.INVOICEDATE, ''YYYY/MM/DD'') AS FECHA_PROMETIDA, TO_CHAR(WOCB.INVOICEDATE, ''YYYY/MM/DD'') AS FECHA_PROX_EMBARQU, NULL AS FECHA_ULT_EMBARQUE, NULL AS FECHA_ULT_CANCELAC, WOB.FORMATTEDWORKORDERNUMBER AS ORDEN_COMPRA, TO_CHAR(WOCB.INVOICEDATE, ''YYYY/MM/DD'') AS FECHA_ORDEN, NULL AS TARJETA_CREDITO, CAST(AD.ADDRESS AS VARCHAR(80)) AS EMBARCAR_A, WOCB.CUSTOMERKEY AS DIREC_EMBARQUE, AD.ADDRESS AS DIRECCION_FACTURA, AC.TAILNUMBER AS RUBRO1, AC.SERIALNUMBER AS RUBRO2, AC.AIRCRAFTMODEL AS RUBRO3, AC.AIRCRAFTMANUFACTURER AS RUBRO4, NULL AS RUBRO5, WOCB.CODCOMMENTS AS OBSERVACIONES, WOB.FORMATTEDWORKORDERNUMBER AS COMENTARIO_CXC, CT.SUBTOTALWORKORDERREVENUE + (CT.TOTALDISCOUNT * -1) AS TOTAL_MERCADERIA, 0 AS MONTO_ANTICIPO, 0 AS MONTO_FLETE, 0 AS MONTO_SEGURO, 0 AS MONTO_DOCUMENTACIO, ''P'' AS TIPO_DESCUENTO1, ''P'' AS TIPO_DESCUENTO2, CT.TOTALDISCOUNT * 0 AS MONTO_DESCUENTO1, 0 AS MONTO_DESCUENTO2, 0 AS PORC_DESCUENTO1, 0 AS PORC_DESCUENTO2, CT.TOTALTAXES AS TOTAL_IMPUESTO1, 0 AS TOTAL_IMPUESTO2, CT.TOTALWORKORDERREVENUE AS TOTAL_A_FACTURAR, 0 AS PORC_COMI_VENDEDOR, 0 AS PORC_COMI_COBRADOR, 0 AS TOTAL_CANCELADO, 0 AS TOTAL_UNIDADES, ''N'' AS IMPRESO, TO_CHAR(WOCB.INVOICEDATE, ''YYYY/MM/DD'') AS FECHA_HORA, 0 AS DESCUENTO_VOLUMEN, ''N'' AS TIPO_PEDIDO, ''D'' AS MONEDA_PEDIDO, 1 AS VERSION_NP, ''N'' AS AUTORIZADO, ''F'' AS DOC_A_GENERAR, ''N'' AS CLASE_PEDIDO, ''D'' AS MONEDA, ''ND - DOLAR'' AS NIVEL_PRECIO, ''ND'' AS COBRADOR, ''ND'' AS RUTA, ''SA'' AS USUARIO, ''30'' AS CONDICION_PAGO, ''MTY'' AS BODEGA, ''ND'' AS ZONA, ''ND'' AS VENDEDOR, WOCB.CUSTOMERKEY AS CLIENTE, CP.TAXIDNUMBER as NIT, WOCB.CUSTOMERKEY AS CLIENTE_DIRECCION, WOCB.CUSTOMERKEY AS CLIENTE_CORPORAC, WOCB.CUSTOMERKEY AS CLIENTE_ORIGEN, CASE WHEN CP.REGION = ''Nacional'' THEN ''MEX'' ELSE ''USA'' END AS PAIS, 0 AS SUBTIPO_DOC_CXC, ''FAC'' AS TIPO_DOC_CXC, ''S'' AS BACKORDER, NULL AS CONTRATO, 0 AS PORC_INTCTE, ''N'' AS DESCUENTO_CASCADA, NULL AS TIPO_CAMBIO, ''N'' AS FIJAR_TIPO_CAMBIO, ''F'' AS ORIGEN_PEDIDO, WOCB.SHIPPINGADDRESS AS DESC_DIREC_EMBARQUE, NULL AS DIVISION_GEOGRAFICA1, NULL AS DIVISION_GEOGRAFICA2, WOCB.TAXPERCENTAGE AS BASE_IMPUESTO1, WOCB.TAXPERCENTAGE AS BASE_IMPUESTO2, WOCB.CUSTOMERNAME AS NOMBRE_CLIENTE, TO_CHAR(WOCB.INVOICEDATE, ''YYYY/MM/DD'') AS FECHA_PROYECTADA, NULL AS FECHA_APROBACION, ''P'' AS TIPO_DOCUMENTO, NULL AS VERSION_COTIZACION, NULL AS RAZON_CANCELA_COTI, NULL AS DES_CANCELA_COTI, NULL AS CAMBIOS_COTI, NULL AS COTIZACION_PADRE, WOCB.TAXEXEMPT, ''MTY'' BASE FROM MTYCORR.WORKORDERCUSTOMERSBASE WOCB LEFT OUTER JOIN MTYCORR.COMPANYPROFILE CP on(CP.COMPANYKEY = WOCB.CUSTOMERKEY) LEFT OUTER JOIN MTYCORR.ADDRESSES AD on(AD.COMPANYKEY = WOCB.CUSTOMERKEY and AD.ADDRESSKEY = CP.DEFAULTADDRESSKEY) LEFT OUTER JOIN MTYCORR.WORKORDERCUSTOMERTOTALS CT on(CT.WORKORDERCUSTOMERKEY = WOCB.WORKORDERCUSTOMERKEY) LEFT OUTER JOIN MTYCORR.WORKORDERSBASE WOB on(WOB.WORKORDERKEY = CT.WORKORDERKEY) LEFT OUTER JOIN MTYCORR.AIRCRAFT AC on(AC.AIRCRAFTKEY = WOB.AIRCRAFTKEY) WHERE CT.SUBTOTALWORKORDERREVENUE <> 0 AND WOCB.INVOICEDATE > ''" + MyGlobals.sFechaInicioOpe + "'' AND WOCB.INVOICEDATE >= TO_DATE(''02/05/2016'', ''DD/MM/YYYY'') ORDER BY WOCB.FORMATTEDINVOICENUMBER') ", new object[0]);
          obtieneOrdenesTrabajo.Merge(table);
          return obtieneOrdenesTrabajo;
        }
        catch (Exception ex)
        {
          throw ex;
        }
      }
    }

    public DataTable DBGetObtieneDetalleOrdenesTrabajo
    {
      get
      {
        try
        {
          DataTable table1 = new DBCorridor().DBGetObtieneDatosDeQuery("Select * From openquery(CORRIDOR, 'SELECT ''T-WO-''||WORKORDERCUSTOMERSBASE.FORMATTEDINVOICENUMBER AS PEDIDO, 2 AS PEDIDO_LINEA, ''TLC'' AS BODEGA, ''PARTS'' AS ARTICULO, ''N'' AS ESTADO, TO_CHAR(WORKORDERCUSTOMERSBASE.INVOICEDATE,''YYYY/MM/DD'') AS FECHA_ENTREGA, 2 AS LINEA_USUARIO, WORKORDERCUSTOMERTOTALS.TOTALPARTSREVENUE AS PRECIO_UNITARIO, 1 AS CANTIDAD_PEDIDA, 1 AS CANTIDAD_A_FACTURA, 0 AS CANTIDAD_FACTURADA, 0 AS CANTIDAD_RESERVADA, 0 AS CANTIDAD_BONIFICAD, 0 AS CANTIDAD_CANCELADA, ''P'' AS TIPO_DESCUENTO, ''TOTAL PARTS'' AS DESCRIPCION, '''' AS  COMENTARIO, TO_CHAR(WORKORDERCUSTOMERSBASE.INVOICEDATE,''YYYY/MM/DD'') AS FECHA_PROMETIDA, 2 LINEA_ORDEN_COMPRA, CASE WHEN WORKORDERCUSTOMERSBASE.TAXCODE =''VATV'' THEN ''4-01-01-410420-01'' ELSE ''4-01-01-410420-02'' END AS CUENTA_CONTABLE FROM TLCCORR.WORKORDERCUSTOMERSBASE WORKORDERCUSTOMERSBASE INNER JOIN TLCCORR.WORKORDERCUSTOMERTOTALS WORKORDERCUSTOMERTOTALS on (WORKORDERCUSTOMERTOTALS.WORKORDERCUSTOMERKEY = WORKORDERCUSTOMERSBASE.WORKORDERCUSTOMERKEY) WHERE WORKORDERCUSTOMERSBASE.INVOICEDATE >= TO_DATE(''2015/01/01'',''YYYY/MM/DD'') AND WORKORDERCUSTOMERTOTALS.TOTALPARTSREVENUE <> 0 AND WORKORDERCUSTOMERSBASE.FORMATTEDINVOICENUMBER IS NOT NULL AND WORKORDERCUSTOMERTOTALS.TOTALPARTSREVENUE IS NOT NULL AND WORKORDERCUSTOMERSBASE.INVOICEDATE > ''" + MyGlobals.sFechaInicioOpe + "'' ')UNION ALL Select * From openquery(CORRIDOR, 'SELECT ''T-WO-''||WORKORDERCUSTOMERSBASE.FORMATTEDINVOICENUMBER AS PEDIDO, 1 AS PEDIDO_LINEA, ''TLC'' AS BODEGA, ''LABOR_CHARGES'' AS ARTICULO, ''N'' AS ESTADO, TO_CHAR(WORKORDERCUSTOMERSBASE.INVOICEDATE,''YYYY/MM/DD'') AS FECHA_ENTREGA, 1 AS LINEA_USUARIO, WORKORDERCUSTOMERTOTALS.TOTALLABORREVENUE AS PRECIO_UNITARIO, 1 AS CANTIDAD_PEDIDA, 1 AS CANTIDAD_A_FACTURA, 0 AS CANTIDAD_FACTURADA, 0 AS CANTIDAD_RESERVADA, 0 AS CANTIDAD_BONIFICAD, 0 AS CANTIDAD_CANCELADA, ''P'' AS TIPO_DESCUENTO, ''TOTAL LABOR CHARGES'' AS DESCRIPCION, ''TOTAL LABOR CHARGES'' AS COMENTARIO, TO_CHAR(WORKORDERCUSTOMERSBASE.INVOICEDATE,''YYYY/MM/DD'') AS FECHA_PROMETIDA, 1 LINEA_ORDEN_COMPRA, CASE WHEN WORKORDERCUSTOMERSBASE.TAXCODE =''VATV'' THEN ''4-01-01-410410-01'' ELSE ''4-01-01-410410-02'' END AS CUENTA_CONTABLE FROM TLCCORR.WORKORDERCUSTOMERSBASE WORKORDERCUSTOMERSBASE INNER JOIN TLCCORR.WORKORDERCUSTOMERTOTALS WORKORDERCUSTOMERTOTALS on (WORKORDERCUSTOMERTOTALS.WORKORDERCUSTOMERKEY = WORKORDERCUSTOMERSBASE.WORKORDERCUSTOMERKEY) WHERE WORKORDERCUSTOMERSBASE.INVOICEDATE >= TO_DATE(''2015/01/01'',''YYYY/MM/DD'') AND WORKORDERCUSTOMERTOTALS.TOTALLABORREVENUE <> 0 AND WORKORDERCUSTOMERSBASE.FORMATTEDINVOICENUMBER IS NOT NULL AND WORKORDERCUSTOMERTOTALS.TOTALLABORREVENUE IS NOT NULL AND WORKORDERCUSTOMERSBASE.INVOICEDATE > ''" + MyGlobals.sFechaInicioOpe + "'' ')UNION ALL Select * From openquery(CORRIDOR, 'SELECT ''T-WO-''||WORKORDERCUSTOMERSBASE.FORMATTEDINVOICENUMBER AS PEDIDO, 3 AS PEDIDO_LINEA, ''TLC'' AS BODEGA, ''OUT_SERVICES'' AS ARTICULO, ''N'' AS ESTADO, TO_CHAR(WORKORDERCUSTOMERSBASE.INVOICEDATE,''YYYY/MM/DD'') AS FECHA_ENTREGA, 3 AS LINEA_USUARIO, WORKORDERCUSTOMERTOTALS.TOTALSERVICESREVENUE AS PRECIO_UNITARIO, 1 AS CANTIDAD_PEDIDA, 1 AS CANTIDAD_A_FACTURA, 0 AS CANTIDAD_FACTURADA, 0 AS CANTIDAD_RESERVADA, 0 AS CANTIDAD_BONIFICAD, 0 AS CANTIDAD_CANCELADA, ''P'' AS TIPO_DESCUENTO, ''TOTAL OUTSIDE SERVICES'' AS DESCRIPCION, ''TOTAL OUTSIDE SERVICES'' AS COMENTARIO, TO_CHAR(WORKORDERCUSTOMERSBASE.INVOICEDATE,''YYYY/MM/DD'') AS FECHA_PROMETIDA, 3 LINEA_ORDEN_COMPRA, CASE WHEN WORKORDERCUSTOMERSBASE.TAXCODE =''VATV'' THEN ''4-01-01-410430-01'' ELSE ''4-01-01-410430-02'' END AS CUENTA_CONTABLE FROM TLCCORR.WORKORDERCUSTOMERSBASE WORKORDERCUSTOMERSBASE INNER JOIN TLCCORR.WORKORDERCUSTOMERTOTALS WORKORDERCUSTOMERTOTALS on (WORKORDERCUSTOMERTOTALS.WORKORDERCUSTOMERKEY = WORKORDERCUSTOMERSBASE.WORKORDERCUSTOMERKEY) WHERE WORKORDERCUSTOMERSBASE.INVOICEDATE >= TO_DATE(''2015/01/01'',''YYYY/MM/DD'') AND WORKORDERCUSTOMERTOTALS.TOTALSERVICESREVENUE <> 0 AND WORKORDERCUSTOMERSBASE.FORMATTEDINVOICENUMBER IS NOT NULL AND WORKORDERCUSTOMERTOTALS.TOTALSERVICESREVENUE IS NOT NULL AND WORKORDERCUSTOMERSBASE.INVOICEDATE > ''" + MyGlobals.sFechaInicioOpe + "'' ') UNION ALL Select * From openquery(CORRIDOR, 'SELECT ''T-WO-''||WORKORDERCUSTOMERSBASE.FORMATTEDINVOICENUMBER AS PEDIDO, 4 AS PEDIDO_LINEA, ''TLC'' AS BODEGA, ''MISCELLANEOUS'' AS ARTICULO, ''N'' AS ESTADO, TO_CHAR(WORKORDERCUSTOMERSBASE.INVOICEDATE,''YYYY/MM/DD'') AS FECHA_ENTREGA, 4 AS LINEA_USUARIO, WORKORDERCUSTOMERTOTALS.TOTALMISCCHARGESREVENUE AS PRECIO_UNITARIO, 1 AS CANTIDAD_PEDIDA, 1 AS CANTIDAD_A_FACTURA, 0 AS CANTIDAD_FACTURADA, 0 AS CANTIDAD_RESERVADA, 0 AS CANTIDAD_BONIFICAD, 0 AS CANTIDAD_CANCELADA, ''P'' AS TIPO_DESCUENTO, ''TOTAL MISCELLANEOUS'' AS DESCRIPCION, ''TOTAL MISCELLANEOUS'' AS COMENTARIO, TO_CHAR(WORKORDERCUSTOMERSBASE.INVOICEDATE,''YYYY/MM/DD'') AS FECHA_PROMETIDA, 4 LINEA_ORDEN_COMPRA, CASE WHEN WORKORDERCUSTOMERSBASE.TAXCODE =''VATV'' THEN ''4-01-01-410450-01'' ELSE ''4-01-01-410450-02'' END AS\tCUENTA_CONTABLE FROM TLCCORR.WORKORDERCUSTOMERSBASE WORKORDERCUSTOMERSBASE INNER JOIN TLCCORR.WORKORDERCUSTOMERTOTALS WORKORDERCUSTOMERTOTALS on (WORKORDERCUSTOMERTOTALS.WORKORDERCUSTOMERKEY = WORKORDERCUSTOMERSBASE.WORKORDERCUSTOMERKEY) WHERE WORKORDERCUSTOMERSBASE.INVOICEDATE >= TO_DATE(''2015/01/01'',''YYYY/MM/DD'') AND WORKORDERCUSTOMERSBASE.FORMATTEDINVOICENUMBER IS NOT NULL AND WORKORDERCUSTOMERTOTALS.TOTALMISCCHARGESREVENUE <> 0 AND WORKORDERCUSTOMERTOTALS.TOTALMISCCHARGESREVENUE IS NOT NULL AND WORKORDERCUSTOMERSBASE.INVOICEDATE > ''" + MyGlobals.sFechaInicioOpe + "'' ')UNION ALL Select * From openquery(CORRIDOR, 'SELECT ''T-WO-''||WORKORDERCUSTOMERSBASE.FORMATTEDINVOICENUMBER AS PEDIDO, 7 AS PEDIDO_LINEA, ''TLC'' AS BODEGA, ''CONSUMABLE_SUPPLIES'' AS ARTICULO, ''N'' AS ESTADO, TO_CHAR(WORKORDERCUSTOMERSBASE.INVOICEDATE,''YYYY/MM/DD'') AS FECHA_ENTREGA, 7 AS LINEA_USUARIO, (WORKORDERCUSTOMERTOTALS.TOTALDISCOUNT * -1) AS PRECIO_UNITARIO, 1 AS CANTIDAD_PEDIDA, 1 AS CANTIDAD_A_FACTURA, 0 AS CANTIDAD_FACTURADA, 0 AS CANTIDAD_RESERVADA, 0 AS CANTIDAD_BONIFICAD, 0 AS CANTIDAD_CANCELADA, ''P'' AS TIPO_DESCUENTO, ''TOTAL CONSUMABLE SUPPLIES'' AS DESCRIPCION, ''TOTAL CONSUMABLE SUPPLIES'' AS COMENTARIO, TO_CHAR(WORKORDERCUSTOMERSBASE.INVOICEDATE,''YYYY/MM/DD'') AS FECHA_PROMETIDA, 7 LINEA_ORDEN_COMPRA, CASE WHEN WORKORDERCUSTOMERSBASE.TAXCODE =''VATV'' THEN ''4-01-01-410450-01'' ELSE ''4-01-01-410450-02'' END AS CUENTA_CONTABLE FROM TLCCORR.WORKORDERCUSTOMERSBASE WORKORDERCUSTOMERSBASE INNER JOIN TLCCORR.WORKORDERCUSTOMERTOTALS WORKORDERCUSTOMERTOTALS on (WORKORDERCUSTOMERTOTALS.WORKORDERCUSTOMERKEY = WORKORDERCUSTOMERSBASE.WORKORDERCUSTOMERKEY) WHERE WORKORDERCUSTOMERSBASE.INVOICEDATE >= TO_DATE(''2015/01/01'',''YYYY/MM/DD'') AND WORKORDERCUSTOMERSBASE.FORMATTEDINVOICENUMBER IS NOT NULL AND WORKORDERCUSTOMERTOTALS.TOTALDISCOUNT <> 0 AND WORKORDERCUSTOMERTOTALS.TOTALDISCOUNT IS NOT NULL AND WORKORDERCUSTOMERSBASE.INVOICEDATE > ''" + MyGlobals.sFechaInicioOpe + "'' UNION ALL SELECT ''T-WO-''||WORKORDERCUSTOMERSBASE.FORMATTEDINVOICENUMBER AS PEDIDO, 5 AS PEDIDO_LINEA, ''TLC'' AS BODEGA, ''FREIGHT'' AS ARTICULO, ''N'' AS ESTADO, TO_CHAR(WORKORDERCUSTOMERSBASE.INVOICEDATE,''YYYY/MM/DD'') AS FECHA_ENTREGA, 5 AS LINEA_USUARIO, WORKORDERCUSTOMERTOTALS.TOTALFREIGHTREVENUE AS PRECIO_UNITARIO, 1 AS CANTIDAD_PEDIDA, 1 AS CANTIDAD_A_FACTURA, 0 AS CANTIDAD_FACTURADA, 0 AS CANTIDAD_RESERVADA, 0 AS CANTIDAD_BONIFICAD, 0 AS CANTIDAD_CANCELADA, ''P'' AS TIPO_DESCUENTO, ''TOTAL FREIGHT'' AS DESCRIPCION, ''TOTAL FREIGHT'' AS COMENTARIO, TO_CHAR(WORKORDERCUSTOMERSBASE.INVOICEDATE,''YYYY/MM/DD'') AS FECHA_PROMETIDA, 5 LINEA_ORDEN_COMPRA, CASE WHEN WORKORDERCUSTOMERSBASE.TAXCODE =''VATV'' THEN ''4-01-01-410440-01'' ELSE ''4-01-01-410440-02'' END AS CUENTA_CONTABLE FROM TLCCORR.WORKORDERCUSTOMERSBASE WORKORDERCUSTOMERSBASE INNER JOIN TLCCORR.WORKORDERCUSTOMERTOTALS WORKORDERCUSTOMERTOTALS on (WORKORDERCUSTOMERTOTALS.WORKORDERCUSTOMERKEY = WORKORDERCUSTOMERSBASE.WORKORDERCUSTOMERKEY) WHERE WORKORDERCUSTOMERSBASE.INVOICEDATE >= TO_DATE(''2015/12/01'',''YYYY/MM/DD'') AND WORKORDERCUSTOMERSBASE.FORMATTEDINVOICENUMBER IS NOT NULL AND WORKORDERCUSTOMERTOTALS.TOTALFREIGHTREVENUE <> 0 AND WORKORDERCUSTOMERTOTALS.TOTALFREIGHTREVENUE IS NOT NULL AND WORKORDERCUSTOMERSBASE.INVOICEDATE > ''" + MyGlobals.sFechaInicioOpe + "'' ') ").Tables[0];
          DataTable table2 = this.DBGetObtieneDatosDeQuery("Select * From openquery(CORRIDOR, 'SELECT  ''M-WO-''||WORKORDERCUSTOMERSBASE.FORMATTEDINVOICENUMBER AS PEDIDO, 2 AS PEDIDO_LINEA, ''MTY'' AS BODEGA, ''PARTS'' AS ARTICULO, ''N'' AS ESTADO, TO_CHAR(WORKORDERCUSTOMERSBASE.INVOICEDATE,''YYYY/MM/DD'') AS FECHA_ENTREGA, 2 AS LINEA_USUARIO, WORKORDERCUSTOMERTOTALS.TOTALPARTSREVENUE AS PRECIO_UNITARIO, 1 AS CANTIDAD_PEDIDA, 1 AS CANTIDAD_A_FACTURA, 0 AS CANTIDAD_FACTURADA, 0 AS CANTIDAD_RESERVADA, 0 AS CANTIDAD_BONIFICAD, 0 AS CANTIDAD_CANCELADA, ''P'' AS TIPO_DESCUENTO, ''TOTAL PARTS'' AS DESCRIPCION, '''' AS  COMENTARIO, TO_CHAR(WORKORDERCUSTOMERSBASE.INVOICEDATE,''YYYY/MM/DD'') AS FECHA_PROMETIDA, 2 LINEA_ORDEN_COMPRA, CASE WHEN WORKORDERCUSTOMERSBASE.TAXCODE =''VATV'' THEN ''4-01-01-410420-01'' ELSE ''4-01-01-410420-02'' END AS CUENTA_CONTABLE FROM MTYCORR.WORKORDERCUSTOMERSBASE WORKORDERCUSTOMERSBASE INNER JOIN MTYCORR.WORKORDERCUSTOMERTOTALS WORKORDERCUSTOMERTOTALS on (WORKORDERCUSTOMERTOTALS.WORKORDERCUSTOMERKEY = WORKORDERCUSTOMERSBASE.WORKORDERCUSTOMERKEY) WHERE WORKORDERCUSTOMERSBASE.INVOICEDATE >= TO_DATE(''2015/01/01'',''YYYY/MM/DD'') AND WORKORDERCUSTOMERTOTALS.TOTALPARTSREVENUE <> 0 AND WORKORDERCUSTOMERSBASE.FORMATTEDINVOICENUMBER IS NOT NULL AND WORKORDERCUSTOMERTOTALS.TOTALPARTSREVENUE IS NOT NULL AND WORKORDERCUSTOMERSBASE.INVOICEDATE > ''" + MyGlobals.sFechaInicioOpe + "'' ')UNION ALL Select * From openquery(CORRIDOR, 'SELECT ''M-WO-''||WORKORDERCUSTOMERSBASE.FORMATTEDINVOICENUMBER AS PEDIDO, 1 AS PEDIDO_LINEA, ''MTY'' AS BODEGA, ''LABOR_CHARGES'' AS ARTICULO, ''N'' AS ESTADO, TO_CHAR(WORKORDERCUSTOMERSBASE.INVOICEDATE,''YYYY/MM/DD'') AS FECHA_ENTREGA, 1 AS LINEA_USUARIO, WORKORDERCUSTOMERTOTALS.TOTALLABORREVENUE AS PRECIO_UNITARIO, 1 AS CANTIDAD_PEDIDA, 1 AS CANTIDAD_A_FACTURA, 0 AS CANTIDAD_FACTURADA, 0 AS CANTIDAD_RESERVADA, 0 AS CANTIDAD_BONIFICAD, 0 AS CANTIDAD_CANCELADA, ''P'' AS TIPO_DESCUENTO, ''TOTAL LABOR CHARGES'' AS DESCRIPCION, ''TOTAL LABOR CHARGES'' AS COMENTARIO, TO_CHAR(WORKORDERCUSTOMERSBASE.INVOICEDATE,''YYYY/MM/DD'') AS FECHA_PROMETIDA, 1 LINEA_ORDEN_COMPRA, CASE WHEN WORKORDERCUSTOMERSBASE.TAXCODE =''VATV'' THEN ''4-01-01-410410-01'' ELSE ''4-01-01-410410-02'' END AS CUENTA_CONTABLE FROM MTYCORR.WORKORDERCUSTOMERSBASE WORKORDERCUSTOMERSBASE INNER JOIN MTYCORR.WORKORDERCUSTOMERTOTALS WORKORDERCUSTOMERTOTALS on (WORKORDERCUSTOMERTOTALS.WORKORDERCUSTOMERKEY = WORKORDERCUSTOMERSBASE.WORKORDERCUSTOMERKEY) WHERE WORKORDERCUSTOMERSBASE.INVOICEDATE >= TO_DATE(''2015/01/01'',''YYYY/MM/DD'') AND WORKORDERCUSTOMERTOTALS.TOTALLABORREVENUE <> 0 AND WORKORDERCUSTOMERSBASE.FORMATTEDINVOICENUMBER IS NOT NULL AND WORKORDERCUSTOMERTOTALS.TOTALLABORREVENUE IS NOT NULL AND WORKORDERCUSTOMERSBASE.INVOICEDATE > ''" + MyGlobals.sFechaInicioOpe + "'' ')UNION ALL Select * From openquery(CORRIDOR, 'SELECT ''M-WO-''||WORKORDERCUSTOMERSBASE.FORMATTEDINVOICENUMBER AS PEDIDO, 3 AS PEDIDO_LINEA, ''MTY'' AS BODEGA, ''OUT_SERVICES'' AS ARTICULO, ''N'' AS ESTADO, TO_CHAR(WORKORDERCUSTOMERSBASE.INVOICEDATE,''YYYY/MM/DD'') AS FECHA_ENTREGA, 3 AS LINEA_USUARIO, WORKORDERCUSTOMERTOTALS.TOTALSERVICESREVENUE AS PRECIO_UNITARIO, 1 AS CANTIDAD_PEDIDA, 1 AS CANTIDAD_A_FACTURA, 0 AS CANTIDAD_FACTURADA, 0 AS CANTIDAD_RESERVADA, 0 AS CANTIDAD_BONIFICAD, 0 AS CANTIDAD_CANCELADA, ''P'' AS TIPO_DESCUENTO, ''TOTAL OUTSIDE SERVICES'' AS DESCRIPCION, ''TOTAL OUTSIDE SERVICES'' AS COMENTARIO, TO_CHAR(WORKORDERCUSTOMERSBASE.INVOICEDATE,''YYYY/MM/DD'') AS FECHA_PROMETIDA, 3 LINEA_ORDEN_COMPRA, CASE WHEN WORKORDERCUSTOMERSBASE.TAXCODE =''VATV'' THEN ''4-01-01-410430-01'' ELSE ''4-01-01-410430-02'' END AS CUENTA_CONTABLE FROM MTYCORR.WORKORDERCUSTOMERSBASE WORKORDERCUSTOMERSBASE INNER JOIN MTYCORR.WORKORDERCUSTOMERTOTALS WORKORDERCUSTOMERTOTALS on (WORKORDERCUSTOMERTOTALS.WORKORDERCUSTOMERKEY = WORKORDERCUSTOMERSBASE.WORKORDERCUSTOMERKEY) WHERE WORKORDERCUSTOMERSBASE.INVOICEDATE >= TO_DATE(''2015/01/01'',''YYYY/MM/DD'') AND WORKORDERCUSTOMERTOTALS.TOTALSERVICESREVENUE <> 0 AND WORKORDERCUSTOMERSBASE.FORMATTEDINVOICENUMBER IS NOT NULL AND WORKORDERCUSTOMERTOTALS.TOTALSERVICESREVENUE IS NOT NULL AND WORKORDERCUSTOMERSBASE.INVOICEDATE > ''" + MyGlobals.sFechaInicioOpe + "'' ')UNION ALL Select * From openquery(CORRIDOR, 'SELECT ''M-WO-''||WORKORDERCUSTOMERSBASE.FORMATTEDINVOICENUMBER AS PEDIDO, 4 AS PEDIDO_LINEA, ''MTY'' AS BODEGA, ''MISCELLANEOUS'' AS ARTICULO, ''N'' AS ESTADO, TO_CHAR(WORKORDERCUSTOMERSBASE.INVOICEDATE,''YYYY/MM/DD'') AS FECHA_ENTREGA, 4 AS LINEA_USUARIO, WORKORDERCUSTOMERTOTALS.TOTALMISCCHARGESREVENUE AS PRECIO_UNITARIO, 1 AS CANTIDAD_PEDIDA, 1 AS CANTIDAD_A_FACTURA, 0 AS CANTIDAD_FACTURADA, 0 AS CANTIDAD_RESERVADA, 0 AS CANTIDAD_BONIFICAD, 0 AS CANTIDAD_CANCELADA, ''P'' AS TIPO_DESCUENTO, ''TOTAL MISCELLANEOUS'' AS DESCRIPCION, ''TOTAL MISCELLANEOUS'' AS COMENTARIO, TO_CHAR(WORKORDERCUSTOMERSBASE.INVOICEDATE,''YYYY/MM/DD'') AS FECHA_PROMETIDA, 4 LINEA_ORDEN_COMPRA, CASE WHEN WORKORDERCUSTOMERSBASE.TAXCODE =''VATV'' THEN ''4-01-01-410450-01'' ELSE ''4-01-01-410450-02'' END AS\tCUENTA_CONTABLE FROM MTYCORR.WORKORDERCUSTOMERSBASE WORKORDERCUSTOMERSBASE INNER JOIN MTYCORR.WORKORDERCUSTOMERTOTALS WORKORDERCUSTOMERTOTALS on (WORKORDERCUSTOMERTOTALS.WORKORDERCUSTOMERKEY = WORKORDERCUSTOMERSBASE.WORKORDERCUSTOMERKEY) WHERE WORKORDERCUSTOMERSBASE.INVOICEDATE >= TO_DATE(''2015/01/01'',''YYYY/MM/DD'') AND WORKORDERCUSTOMERSBASE.FORMATTEDINVOICENUMBER IS NOT NULL AND WORKORDERCUSTOMERTOTALS.TOTALMISCCHARGESREVENUE <> 0 AND WORKORDERCUSTOMERTOTALS.TOTALMISCCHARGESREVENUE IS NOT NULL AND WORKORDERCUSTOMERSBASE.INVOICEDATE > ''" + MyGlobals.sFechaInicioOpe + "'' ') UNION ALL Select * From openquery(CORRIDOR, 'SELECT ''M-WO-''||WORKORDERCUSTOMERSBASE.FORMATTEDINVOICENUMBER AS PEDIDO, 7 AS PEDIDO_LINEA, ''MTY'' AS BODEGA, ''CONSUMABLE_SUPPLIES'' AS ARTICULO, ''N'' AS ESTADO, TO_CHAR(WORKORDERCUSTOMERSBASE.INVOICEDATE,''YYYY/MM/DD'') AS FECHA_ENTREGA, 7 AS LINEA_USUARIO, (WORKORDERCUSTOMERTOTALS.TOTALDISCOUNT * -1) AS PRECIO_UNITARIO, 1 AS CANTIDAD_PEDIDA, 1 AS CANTIDAD_A_FACTURA, 0 AS CANTIDAD_FACTURADA, 0 AS CANTIDAD_RESERVADA, 0 AS CANTIDAD_BONIFICAD, 0 AS CANTIDAD_CANCELADA, ''P'' AS TIPO_DESCUENTO, ''TOTAL CONSUMABLE SUPPLIES'' AS DESCRIPCION, ''TOTAL CONSUMABLE SUPPLIES'' AS COMENTARIO, TO_CHAR(WORKORDERCUSTOMERSBASE.INVOICEDATE,''YYYY/MM/DD'') AS FECHA_PROMETIDA, 7 LINEA_ORDEN_COMPRA, CASE WHEN WORKORDERCUSTOMERSBASE.TAXCODE =''VATV'' THEN ''4-01-01-410450-01'' ELSE ''4-01-01-410450-02'' END AS CUENTA_CONTABLE FROM MTYCORR.WORKORDERCUSTOMERSBASE WORKORDERCUSTOMERSBASE INNER JOIN MTYCORR.WORKORDERCUSTOMERTOTALS WORKORDERCUSTOMERTOTALS on (WORKORDERCUSTOMERTOTALS.WORKORDERCUSTOMERKEY = WORKORDERCUSTOMERSBASE.WORKORDERCUSTOMERKEY) WHERE WORKORDERCUSTOMERSBASE.INVOICEDATE >= TO_DATE(''2015/01/01'',''YYYY/MM/DD'') AND WORKORDERCUSTOMERSBASE.FORMATTEDINVOICENUMBER IS NOT NULL AND WORKORDERCUSTOMERTOTALS.TOTALDISCOUNT <> 0 AND WORKORDERCUSTOMERTOTALS.TOTALDISCOUNT IS NOT NULL AND WORKORDERCUSTOMERSBASE.INVOICEDATE > ''" + MyGlobals.sFechaInicioOpe + "'' UNION ALL SELECT ''M-WO-''||WORKORDERCUSTOMERSBASE.FORMATTEDINVOICENUMBER AS PEDIDO, 5 AS PEDIDO_LINEA, ''MTY'' AS BODEGA, ''FREIGHT'' AS ARTICULO, ''N'' AS ESTADO, TO_CHAR(WORKORDERCUSTOMERSBASE.INVOICEDATE,''YYYY/MM/DD'') AS FECHA_ENTREGA, 5 AS LINEA_USUARIO, WORKORDERCUSTOMERTOTALS.TOTALFREIGHTREVENUE AS PRECIO_UNITARIO, 1 AS CANTIDAD_PEDIDA, 1 AS CANTIDAD_A_FACTURA, 0 AS CANTIDAD_FACTURADA, 0 AS CANTIDAD_RESERVADA, 0 AS CANTIDAD_BONIFICAD, 0 AS CANTIDAD_CANCELADA, ''P'' AS TIPO_DESCUENTO, ''TOTAL FREIGHT'' AS DESCRIPCION, ''TOTAL FREIGHT'' AS COMENTARIO, TO_CHAR(WORKORDERCUSTOMERSBASE.INVOICEDATE,''YYYY/MM/DD'') AS FECHA_PROMETIDA, 5 LINEA_ORDEN_COMPRA, CASE WHEN WORKORDERCUSTOMERSBASE.TAXCODE =''VATV'' THEN ''4-01-01-410440-01'' ELSE ''4-01-01-410440-02'' END AS CUENTA_CONTABLE FROM MTYCORR.WORKORDERCUSTOMERSBASE WORKORDERCUSTOMERSBASE INNER JOIN MTYCORR.WORKORDERCUSTOMERTOTALS WORKORDERCUSTOMERTOTALS on (WORKORDERCUSTOMERTOTALS.WORKORDERCUSTOMERKEY = WORKORDERCUSTOMERSBASE.WORKORDERCUSTOMERKEY) WHERE WORKORDERCUSTOMERSBASE.INVOICEDATE >= TO_DATE(''2015/12/01'',''YYYY/MM/DD'') AND WORKORDERCUSTOMERSBASE.FORMATTEDINVOICENUMBER IS NOT NULL AND WORKORDERCUSTOMERTOTALS.TOTALFREIGHTREVENUE <> 0 AND WORKORDERCUSTOMERTOTALS.TOTALFREIGHTREVENUE IS NOT NULL AND WORKORDERCUSTOMERSBASE.INVOICEDATE > ''" + MyGlobals.sFechaInicioOpe + "'' ') ").Tables[0];
          table1.Merge(table2);
          return table1;
        }
        catch (Exception ex)
        {
          throw ex;
        }
      }
    }

    public DataTable DBGetObtienePedidos
    {
      get
      {
        try
        {
          DataTable table1 = this.DBGetObtieneDatosDeQuery("Select * From openquery(CORRIDOR, ' SELECT ''T-SO-'' || INV.FORMATTEDINVOICENUMBER AS PEDIDO, ''N'' AS ESTADO, TO_CHAR(INV.CREATEDDATE, ''YYYY/MM/DD'') AS FECHA_PEDIDO, TO_CHAR(INV.CREATEDDATE, ''YYYY/MM/DD'') AS FECHA_PROMETIDA, TO_CHAR(INV.CREATEDDATE, ''YYYY/MM/DD'') AS FECHA_PROX_EMBARQU, NULL AS FECHA_ULT_EMBARQUE, NULL AS FECHA_ULT_CANCELAC, (SELECT SUBSTR(INVD.SALESORDERNUMBER, 1, 10) FROM TLCCORR.INVOICE INVD WHERE SUBSTR(INVD.FORMATTEDINVOICENUMBER, 1, 11) = SUBSTR(INV.FORMATTEDINVOICENUMBER, 1, 11) AND  ROWNUM = 1) AS ORDEN_COMPRA, TO_CHAR(INV.CREATEDDATE, ''YYYY/MM/DD'') AS FECHA_ORDEN, INV.CREDITCARDNAME AS TARJETA_CREDITO, CAST(INV.BILLADDRESS AS VARCHAR(80)) AS EMBARCAR_A, CAST(INV.COMPANYKEY AS VARCHAR(8)) AS DIREC_EMBARQUE, CAST(INV.BILLADDRESS AS VARCHAR(400)) AS DIRECCION_FACTURA, (SELECT INVD2.AIRCRAFTTAILNUMBER  FROM TLCCORR.INVOICEDETAIL INVD2 WHERE SUBSTR(INV.FORMATTEDINVOICENUMBER, 1, 11) = SUBSTR(INVD2.FORMATTEDINVOICENUMBER, 1, 11) AND  ROWNUM = 1) AS RUBRO1, (SELECT INVD2.AIRCRAFTSERIALNUMBER  FROM TLCCORR.INVOICEDETAIL INVD2 WHERE SUBSTR(INV.FORMATTEDINVOICENUMBER, 1, 11) = SUBSTR(INVD2.FORMATTEDINVOICENUMBER, 1, 11) AND  ROWNUM = 1) AS RUBRO2, (NVL((SELECT AC.AIRCRAFTMODEL  FROM TLCCORR.AIRCRAFT AC WHERE AC.AIRCRAFTKEY = INVD.AIRCRAFTKEY AND  ROWNUM = 1), '' '')) AS RUBRO3, (NVL((SELECT AC.AIRCRAFTMANUFACTURER  FROM TLCCORR.AIRCRAFT AC WHERE(AC.AIRCRAFTKEY = INVD.AIRCRAFTKEY) AND  ROWNUM = 1), '' '')) AS RUBRO4, NULL AS RUBRO5, CAST(INV.COMMENTS AS VARCHAR(200)) AS OBSERVACIONES, SUBSTR(INVD.SALESORDERNUMBER, 1, 10) AS COMENTARIO_CXC, CASE WHEN INV.SUBTOTALCOST = 0 AND INV.FREIGHTCOST <> 0 THEN INV.FREIGHTCOST ELSE INV.SUBTOTALCOST END AS TOTAL_MERCADERIA, 0 AS MONTO_ANTICIPO, 0 AS MONTO_FLETE, NVL(INV.INSURANCECOST, 0) AS MONTO_SEGURO, 0 AS MONTO_DOCUMENTACIO, ''P'' AS TIPO_DESCUENTO1, ''P'' AS TIPO_DESCUENTO2, 0 AS MONTO_DESCUENTO1, 0 AS MONTO_DESCUENTO2, 0 AS PORC_DESCUENTO1, 0 AS PORC_DESCUENTO2, INV.TAXCOST AS TOTAL_IMPUESTO1, 0 AS TOTAL_IMPUESTO2, INV.TOTALCOST AS TOTAL_A_FACTURAR, 0 AS PORC_COMI_VENDEDOR, 0 AS PORC_COMI_COBRADOR, 0 AS TOTAL_CANCELADO, 0 AS TOTAL_UNIDADES, ''N'' AS IMPRESO, TO_CHAR(INV.CREATEDDATE, ''YYYY/MM/DD'') AS FECHA_HORA, 0 AS DESCUENTO_VOLUMEN, ''N'' AS TIPO_PEDIDO, ''D'' AS MONEDA_PEDIDO, 1 AS VERSION_NP, ''N'' AS AUTORIZADO, ''F'' AS DOC_A_GENERAR, ''N'' AS CLASE_PEDIDO, ''D'' AS MONEDA, ''ND - DOLAR'' AS NIVEL_PRECIO, ''ND'' AS COBRADOR, ''ND'' AS RUTA, ''SA'' AS USUARIO, ''00'' AS CONDICION_PAGO, ''TLC'' AS BODEGA, ''ND'' AS ZONA, ''ND'' AS VENDEDOR, CAST(CP.COMPANYKEY AS VARCHAR(20)) AS CLIENTE, CAST(CP.COMPANYKEY AS VARCHAR(20)) AS CLIENTE_DIRECCION, CAST(CP.COMPANYKEY AS VARCHAR(20)) AS CLIENTE_CORPORAC, CAST(CP.COMPANYKEY AS VARCHAR(20)) AS CLIENTE_ORIGEN, CASE WHEN CP.REGION = ''Nacional'' THEN ''MEX'' ELSE ''USA'' END AS PAIS, 0 AS SUBTIPO_DOC_CXC, ''FAC'' AS TIPO_DOC_CXC, ''N'' AS BACKORDER, NULL AS CONTRATO, 0 AS PORC_INTCTE, ''N'' AS DESCUENTO_CASCADA, NULL AS TIPO_CAMBIO, ''N'' AS FIJAR_TIPO_CAMBIO, ''F'' AS ORIGEN_PEDIDO, INV.BILLADDRESS AS DESC_DIREC_EMBARQUE, CAST(INV.COMPANYNAME AS VARCHAR(100)) AS NOMBRE_CLIENTE, TO_CHAR(INV.CREATEDDATE, ''YYYY/MM/DD'') AS FECHA_PROYECTADA, NULL AS FECHA_APROBACION, ''P'' AS TIPO_DOCUMENTO, CP.TAXIDNUMBER as NIT, INV.TAXEXEMPT, ''TLC'' AS BASE FROM TLCCORR.INVOICE INV LEFT OUTER JOIN TLCCORR.INVOICEDETAIL INVD on(INVD.INVOICEKEY = INV.INVOICEKEY) LEFT OUTER JOIN TLCCORR.COMPANYPROFILE CP on(CP.COMPANYKEY = INV.COMPANYKEY) WHERE INV.TOTALCOST <> 0 AND INV.FINALIZEDDATE >= TO_DATE(''2016/05/02'', ''YYYY/MM/DD'') AND INVD.SEQNUMBER = 1 AND INV.CREATEDDATE > ''" + MyGlobals.sFechaInicioOpe + "'' AND(SELECT SUBSTR(INVD.SALESORDERNUMBER, 1, 10) FROM TLCCORR.INVOICEDETAIL INVD WHERE INVD.INVOICEKEY = INV.INVOICEKEY AND  ROWNUM = 1) IS NOT NULL ORDER by(SUBSTR(INV.FORMATTEDINVOICENUMBER, 2, 10))') ").Tables[0];
          DataTable table2 = this.DBGetObtieneDatosDeQuery("Select * From openquery(CORRIDOR, ' SELECT ''M-SO-'' || INV.FORMATTEDINVOICENUMBER AS PEDIDO, ''N'' AS ESTADO, TO_CHAR(INV.CREATEDDATE, ''YYYY/MM/DD'') AS FECHA_PEDIDO, TO_CHAR(INV.CREATEDDATE, ''YYYY/MM/DD'') AS FECHA_PROMETIDA, TO_CHAR(INV.CREATEDDATE, ''YYYY/MM/DD'') AS FECHA_PROX_EMBARQU, NULL AS FECHA_ULT_EMBARQUE, NULL AS FECHA_ULT_CANCELAC, (SELECT SUBSTR(INVD.SALESORDERNUMBER, 1, 10) FROM MTYCORR.INVOICE INVD WHERE SUBSTR(INVD.FORMATTEDINVOICENUMBER, 1, 11) = SUBSTR(INV.FORMATTEDINVOICENUMBER, 1, 11) AND  ROWNUM = 1) AS ORDEN_COMPRA, TO_CHAR(INV.CREATEDDATE, ''YYYY/MM/DD'') AS FECHA_ORDEN, INV.CREDITCARDNAME AS TARJETA_CREDITO, CAST(INV.BILLADDRESS AS VARCHAR(80)) AS EMBARCAR_A, CAST(INV.COMPANYKEY AS VARCHAR(8)) AS DIREC_EMBARQUE, CAST(INV.BILLADDRESS AS VARCHAR(400)) AS DIRECCION_FACTURA, (SELECT INVD2.AIRCRAFTTAILNUMBER  FROM MTYCORR.INVOICEDETAIL INVD2 WHERE SUBSTR(INV.FORMATTEDINVOICENUMBER, 1, 11) = SUBSTR(INVD2.FORMATTEDINVOICENUMBER, 1, 11) AND  ROWNUM = 1) AS RUBRO1, (SELECT INVD2.AIRCRAFTSERIALNUMBER  FROM MTYCORR.INVOICEDETAIL INVD2 WHERE SUBSTR(INV.FORMATTEDINVOICENUMBER, 1, 11) = SUBSTR(INVD2.FORMATTEDINVOICENUMBER, 1, 11) AND  ROWNUM = 1) AS RUBRO2, (NVL((SELECT AC.AIRCRAFTMODEL  FROM MTYCORR.AIRCRAFT AC WHERE AC.AIRCRAFTKEY = INVD.AIRCRAFTKEY AND  ROWNUM = 1), '' '')) AS RUBRO3, (NVL((SELECT AC.AIRCRAFTMANUFACTURER  FROM MTYCORR.AIRCRAFT AC WHERE(AC.AIRCRAFTKEY = INVD.AIRCRAFTKEY) AND  ROWNUM = 1), '' '')) AS RUBRO4, NULL AS RUBRO5, CAST(INV.COMMENTS AS VARCHAR(200)) AS OBSERVACIONES, SUBSTR(INVD.SALESORDERNUMBER, 1, 10) AS COMENTARIO_CXC, CASE WHEN INV.SUBTOTALCOST = 0 AND INV.FREIGHTCOST <> 0 THEN INV.FREIGHTCOST ELSE INV.SUBTOTALCOST END AS TOTAL_MERCADERIA, 0 AS MONTO_ANTICIPO, 0 AS MONTO_FLETE, NVL(INV.INSURANCECOST, 0) AS MONTO_SEGURO, 0 AS MONTO_DOCUMENTACIO, ''P'' AS TIPO_DESCUENTO1, ''P'' AS TIPO_DESCUENTO2, 0 AS MONTO_DESCUENTO1, 0 AS MONTO_DESCUENTO2, 0 AS PORC_DESCUENTO1, 0 AS PORC_DESCUENTO2, INV.TAXCOST AS TOTAL_IMPUESTO1, 0 AS TOTAL_IMPUESTO2, INV.TOTALCOST AS TOTAL_A_FACTURAR, 0 AS PORC_COMI_VENDEDOR, 0 AS PORC_COMI_COBRADOR, 0 AS TOTAL_CANCELADO, 0 AS TOTAL_UNIDADES, ''N'' AS IMPRESO, TO_CHAR(INV.CREATEDDATE, ''YYYY/MM/DD'') AS FECHA_HORA, 0 AS DESCUENTO_VOLUMEN, ''N'' AS TIPO_PEDIDO, ''D'' AS MONEDA_PEDIDO, 1 AS VERSION_NP, ''N'' AS AUTORIZADO, ''F'' AS DOC_A_GENERAR, ''N'' AS CLASE_PEDIDO, ''D'' AS MONEDA, ''ND - DOLAR'' AS NIVEL_PRECIO, ''ND'' AS COBRADOR, ''ND'' AS RUTA, ''SA'' AS USUARIO, ''00'' AS CONDICION_PAGO, ''MTY'' AS BODEGA, ''ND'' AS ZONA, ''ND'' AS VENDEDOR, CAST(CP.COMPANYKEY AS VARCHAR(20)) AS CLIENTE, CAST(CP.COMPANYKEY AS VARCHAR(20)) AS CLIENTE_DIRECCION, CAST(CP.COMPANYKEY AS VARCHAR(20)) AS CLIENTE_CORPORAC, CAST(CP.COMPANYKEY AS VARCHAR(20)) AS CLIENTE_ORIGEN, CASE WHEN CP.REGION = ''Nacional'' THEN ''MEX'' ELSE ''USA'' END AS PAIS, 0 AS SUBTIPO_DOC_CXC, ''FAC'' AS TIPO_DOC_CXC, ''N'' AS BACKORDER, NULL AS CONTRATO, 0 AS PORC_INTCTE, ''N'' AS DESCUENTO_CASCADA, NULL AS TIPO_CAMBIO, ''N'' AS FIJAR_TIPO_CAMBIO, ''F'' AS ORIGEN_PEDIDO, INV.BILLADDRESS AS DESC_DIREC_EMBARQUE, CAST(INV.COMPANYNAME AS VARCHAR(100)) AS NOMBRE_CLIENTE, TO_CHAR(INV.CREATEDDATE, ''YYYY/MM/DD'') AS FECHA_PROYECTADA, NULL AS FECHA_APROBACION, ''P'' AS TIPO_DOCUMENTO, CP.TAXIDNUMBER as NIT, INV.TAXEXEMPT, ''MTY'' AS BASE FROM MTYCORR.INVOICE INV LEFT OUTER JOIN MTYCORR.INVOICEDETAIL INVD on(INVD.INVOICEKEY = INV.INVOICEKEY) LEFT OUTER JOIN MTYCORR.COMPANYPROFILE CP on(CP.COMPANYKEY = INV.COMPANYKEY) WHERE INV.TOTALCOST <> 0 AND INV.FINALIZEDDATE >= TO_DATE(''2016/05/02'', ''YYYY/MM/DD'') AND INVD.SEQNUMBER = 1 AND INV.CREATEDDATE > ''" + MyGlobals.sFechaInicioOpe + "'' AND(SELECT SUBSTR(INVD.SALESORDERNUMBER, 1, 10) FROM MTYCORR.INVOICEDETAIL INVD WHERE INVD.INVOICEKEY = INV.INVOICEKEY AND  ROWNUM = 1) IS NOT NULL ORDER by(SUBSTR(INV.FORMATTEDINVOICENUMBER, 2, 10))') ").Tables[0];
          table1.Merge(table2);
          return table1;
        }
        catch (Exception ex)
        {
          throw ex;
        }
      }
    }

    public DataTable DBGetObtieneDetallePedidos
    {
      get
      {
        try
        {
          DataTable table1 = this.DBGetObtieneDatosDeQuery("SELECT *, 'TLC' BASE FROM ALESC.dbo.Pedido_1_SAP_TLC UNION ALL SELECT *, 'TLC' BASE from ALESC.dbo.Pedido_2_SAP_TLC").Tables[0];
          DataTable table2 = this.DBGetObtieneDatosDeQuery("SELECT *, 'MTY' BASE FROM ALESC.dbo.Pedido_1_SAP_MTY UNION ALL SELECT *, 'MTY' BASE From ALESC.dbo.Pedido_2_SAP_MTY").Tables[0];
          table1.Merge(table2);
          return table1;
        }
        catch (Exception ex)
        {
          throw ex;
        }
      }
    }

    public DataTable DBGetObtienePurchaseOrders
    {
      get
      {
        try
        {
          DataTable obtienePurchaseOrders = this.oBD_SP.EjecutarDT_DeQuery("SELECT CP1.[PROVEEDOR] ,CP1.[DOCUMENTO] ,CP1.FACTURA ,CP1.[TIPO] ,CP1.[TIPODOC] ,CP1.[EMBARQUE_APROBADO] ,CP1.[FECHA_DOCUMENTO] ,CP1.[FECHA] ,CP1.[TIPO_EMBARQUE] ,CP1.[APLICACION] ,CP1.[MONTO] ,CP1.[SALDO] ,CP1.[MONTO_LOCAL] ,CP1.[SALDO_LOCAL] ,CP2.[MONTO_DOLAR] ,CP2.[SALDO_DOLAR] ,CP2.[TIPO_CAMBIO_MONEDA] ,CP2.[TIPO_CAMBIO_DOLAR] ,CP2.[MONTO_PROV] ,CP2.[SALDO_PROV] ,CP2.[TIPO_CAMBIO_PROV] ,CONVERT(DECIMAL(12,2), CP2.[SUBTOTAL]) SUBTOTAL ,CP2.[DESCUENTO] ,CP3.[IMPUESTO1] ,CP3.[FECHA_ULT_MOD] ,CP3.[NOTAS] ,CP3.[TIPO_CAMB_ACT_LOC] ,CP3.[TIPO_CAMB_ACT_DOL] ,CP3.[TIPO_CAMB_ACT_PROV] ,CP3.[USUARIO_ULT_MOD] ,CP3.[CONDICION_PAGO] ,CP3.[MONEDA] ,CP3.[FECHA_VENCE] ,CP4.[CODIGO_IMPUESTO] ,CP4.[PAIS] ,CP4.[BASE_IMPUESTO1] ,CP4.BASE ,CP1.VIM ,CP1.[RAZONSOCIAL],CP1.[RFC] FROM [master].[dbo].[VIEW_DES_SAP_DocumentosCPTLC_1] CP1 INNER JOIN [master].[dbo].[VIEW_DES_SAP_DocumentosCPTLC_2] CP2  ON (CP1.DOCUMENTO = CP2.DOCUMENTO) INNER JOIN[master].[dbo].[VIEW_DES_SAP_DocumentosCPTLC_3] CP3 ON(CP2.DOCUMENTO = CP3.DOCUMENTO) INNER JOIN[master].[dbo].[VIEW_DES_SAP_DocumentosCPTLC_4] CP4 ON(CP3.DOCUMENTO = CP4.DOCUMENTO) WHERE CONVERT(DATETIME, CP1.FECHA) >= '" + MyGlobals.sFechaInicioOpe + "' AND CP1.DOCUMENTO NOT LIKE 'EX%' AND CP1.DOCUMENTO NOT LIKE 'CAJA CH%' AND CP1.DOCUMENTO NOT LIKE 'AMEX%' AND CP1.PROVEEDOR NOT IN(7492,7727,7728) ", new object[0]);
          Utils.GuardarBitacora("Total Purcharse Orders TLC: " + obtienePurchaseOrders.Rows.Count.S());
          DataTable table = this.oBD_SP.EjecutarDT_DeQuery("SELECT CP1.[PROVEEDOR] ,CP1.[DOCUMENTO] ,CP1.FACTURA ,CP1.[TIPO] ,CP1.[TIPODOC] ,CP1.[EMBARQUE_APROBADO] ,CP1.[FECHA_DOCUMENTO] ,CP1.[FECHA] ,CP1.[TIPO_EMBARQUE] ,CP1.[APLICACION] ,CP1.[MONTO] ,CP1.[SALDO] ,CP1.[MONTO_LOCAL] ,CP1.[SALDO_LOCAL] ,CP2.[MONTO_DOLAR] ,CP2.[SALDO_DOLAR] ,CP2.[TIPO_CAMBIO_MONEDA] ,CP2.[TIPO_CAMBIO_DOLAR] ,CP2.[MONTO_PROV] ,CP2.[SALDO_PROV] ,CP2.[TIPO_CAMBIO_PROV] ,CONVERT(DECIMAL(12,2), CP2.[SUBTOTAL]) SUBTOTAL ,CP2.[DESCUENTO] ,CP3.[IMPUESTO1] ,CP3.[FECHA_ULT_MOD] ,CP3.[NOTAS] ,CP3.[TIPO_CAMB_ACT_LOC] ,CP3.[TIPO_CAMB_ACT_DOL] ,CP3.[TIPO_CAMB_ACT_PROV] ,CP3.[USUARIO_ULT_MOD] ,CP3.[CONDICION_PAGO] ,CP3.[MONEDA] ,CP3.[FECHA_VENCE] ,CP4.[CODIGO_IMPUESTO] ,CP4.[PAIS] ,CP4.[BASE_IMPUESTO1] ,CP4.BASE ,CP1.VIM ,CP1.[RAZONSOCIAL] ,CP1.[RFC] FROM [master].[dbo].[VIEW_DES_SAP_DocumentosCPMTY_1] CP1 INNER JOIN [master].[dbo].[VIEW_DES_SAP_DocumentosCPMTY_2] CP2  ON (CP1.DOCUMENTO = CP2.DOCUMENTO) INNER JOIN[master].[dbo].[VIEW_DES_SAP_DocumentosCPMTY_3] CP3 ON(CP2.DOCUMENTO = CP3.DOCUMENTO) INNER JOIN[master].[dbo].[VIEW_DES_SAP_DocumentosCPMTY_4] CP4 ON(CP3.DOCUMENTO = CP4.DOCUMENTO) WHERE CONVERT(DATETIME, CP1.FECHA) >= '" + MyGlobals.sFechaInicioOpe + "' AND CP1.DOCUMENTO NOT LIKE 'EX%' AND CP1.DOCUMENTO NOT LIKE 'CAJA CH%' AND CP1.DOCUMENTO NOT LIKE 'AMEX%' ", new object[0]);
          Utils.GuardarBitacora("Total Purcharse Orders MTY: " + table.Rows.Count.S());
          obtienePurchaseOrders.Merge(table);
          return obtienePurchaseOrders;
        }
        catch (Exception ex)
        {
          throw ex;
        }
      }
    }

    public DataSet DBGetObtieneDatosDeQuery(string sQuery)
    {
      try
      {
        SqlConnection connection = new SqlConnection();
        try
        {
          DataSet dataSet = new DataSet();
          connection.ConnectionString = this.oBD_SP.sConexionSQL;
          connection.Open();
          SqlCommand selectCommand = new SqlCommand(sQuery, connection);
          selectCommand.CommandType = CommandType.Text;
          selectCommand.CommandTimeout = 0;
          new SqlDataAdapter(selectCommand).Fill(dataSet);
          connection.Close();
          return dataSet;
        }
        catch (Exception ex)
        {
          throw ex;
        }
        finally
        {
          connection?.Dispose();
        }
      }
      catch (Exception ex)
      {
        throw ex;
      }
    }
  }
}
